version: '3.8'

services:
  # PostgreSQL 16 Database (Development)
  postgres:
    image: postgres:16-alpine
    container_name: eam-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: eam_dev
      POSTGRES_USER: eam_dev
      POSTGRES_PASSWORD: eam_dev_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - eam-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eam_dev -d eam_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis 7 for caching and sessions (Development)
  redis:
    image: redis:7-alpine
    container_name: eam-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
      - ./storage/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - eam-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MinIO for screenshot storage (Development)
  minio:
    image: minio/minio:latest
    container_name: eam-minio-dev
    restart: unless-stopped
    ports:
      - "9001:9000"
      - "9002:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DOMAIN: localhost
    volumes:
      - minio_dev_data:/data
      - ./storage/minio:/minio/config
    command: server /data --console-address ":9001"
    networks:
      - eam-dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MinIO Client for setup (Development)
  minio-setup:
    image: minio/mc:latest
    container_name: eam-minio-setup-dev
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./storage/minio/setup-minio.sh:/setup-minio.sh
    entrypoint: /setup-minio.sh
    networks:
      - eam-dev-network
    restart: "no"

  # Jaeger for distributed tracing (Development)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: eam-jaeger-dev
    restart: unless-stopped
    ports:
      - "16687:16686"
      - "14269:14268"
      - "4318:4317"
      - "4319:4318"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - eam-dev-network

  # PostgreSQL Admin (Development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: eam-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@eam.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - eam-dev-network

  # Redis Commander (Development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: eam-redis-commander-dev
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - eam-dev-network

  # Database migration runner (Development)
  db-migrate:
    image: migrate/migrate:latest
    container_name: eam-db-migrate-dev
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./database/migrations:/migrations
    command: >
      -path=/migrations
      -database=postgres://eam_dev:eam_dev_pass@postgres:5432/eam_dev?sslmode=disable
      up
    networks:
      - eam-dev-network
    restart: "no"

  # Hot reload for development
  file-watcher:
    image: node:18-alpine
    container_name: eam-file-watcher-dev
    working_dir: /app
    volumes:
      - ../src:/app/src
      - ./scripts/watch-files.sh:/watch-files.sh
    command: /watch-files.sh
    networks:
      - eam-dev-network
    restart: unless-stopped

networks:
  eam-dev-network:
    driver: bridge
    name: eam-dev-network

volumes:
  postgres_dev_data:
    driver: local
    name: eam-postgres-dev-data
  redis_dev_data:
    driver: local
    name: eam-redis-dev-data
  minio_dev_data:
    driver: local
    name: eam-minio-dev-data